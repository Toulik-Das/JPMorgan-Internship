From 029497f73c37c0349bce94f444568b7ed280ff73 Mon Sep 17 00:00:00 2001
From: Toulik Das <dastoulik12@gmail.com>
Date: Fri, 24 Apr 2020 14:36:45 +0530
Subject: [PATCH] 'Task3'

---
 src/DataManipulator.ts | 34 ++++++++++++++++++++++++----------
 src/Graph.tsx          | 23 ++++++++++++++---------
 2 files changed, 38 insertions(+), 19 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..89f4ca8 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,34 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
-  timestamp: Date,
+        price_abc: number,
+        price_def: number,
+        ratio: number,
+        timestamp: Date,
+        upper_bound: number,
+        lower_bound:number,
+        trigger_alert:number|indefined,
 }
 
 
 export class DataManipulator {
   static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+    
+    const priceABC = (serverRespond[0].top_ask.price+serverRespond[0].top_bid.price)/2;
+    const priceDEF = (serverRespond[1].top_ask.price+serverRespond[1].top_bid.price)/2;
+    const ratio = priceABC/priceDEF;
+    const upperBound=1+0.05;
+    const lowerBound=1-0.05;
+
+    return{
+          price_abc:priceABC,
+          price_def:priceDEF,
+          ratio,
+          timestamp:serverRespond[0],timestamp > serverRespond[1].timestamp?
+           serverRespond[1].timestamp : serverRespond[1].timestamp,
+          upper_bound : upperBound,
+          lowe_bound : lowerBound,
+          trigger_alert : (ratio>upperBound || ratio<lowerBound) ? ratio: undefiened,
+    };
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..f5bd481 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
+      price_abc:'float',
+      price_def:'float',
+      ratio:'float',
+      timestamp:'date',
+      upper_bound:'float',
+      lower_bound:'float',
+      trigger_alert:'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,14 +39,16 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio","lower_bound","upper_bound","trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        price_abc:'avg',
+        price_def:'avg',
+        ratio:'avg',
         timestamp: 'distinct count',
+        upper_bound: 'avg',
+        lower_bound:'avg',
+        trigger_alert:'avg',
       }));
     }
   }
-- 
2.18.0.windows.1

